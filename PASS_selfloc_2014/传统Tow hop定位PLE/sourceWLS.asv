clc;  %%%利用静态声源辅助实现单个未知节点定位WLS
clear all
format long
close all

%% 设定全局变量
global SIGMA
global M
%% 设定基本的参数，比如蒙特卡洛的个数，DOA误差范围，声源个数等参数
M = 2000;                         %Monte Caro times
NumSource =[3 5 7 9];             %声源的个数
Beacon=[10,10,pi/6;20,50,pi/5;20,30,pi/3];  %信标节点的位置信息Beacon=[10,10,pi/6;50,0,pi/5;30,40,pi/3];                                           %Beacon=[10,10,pi/6;60,0,pi/5;20,40,pi/3];  
Bl=length(Beacon(:,1));           %信标个数 Beacon=[10,20,pi/3;0,160,pi/6;170,190,pi/5;130,10,pi/4;60,100,pi/5];
Unodes=[90,90,pi/4];              %未知节点的位置信息Unodes=[90,110,pi/5];  
R=100;                            %感知半径
n = 1;
threshold = 200;
err=10;
%% 在不同声源数目下进行定位
 for ii=1:length(NumSource)
    ASource=NumSource(ii);
    z=0;
    for SIGMA = 1: 1 : err
        num=0;
        nm=0;
        for i=1:M           
            SLocation=round(rand(ASource,2)*100); %多个声源位置分布100*100
            kk=1;
            ei=0;
            pi1=0;
            SPbias=[];
            S_Source=[];
            A_Source=[];
     %% 信标定位静态声源与未知节点%%%%%%%%
            for j=1: ASource
                for k=1:Bl
                    BBeacon=Beacon(k,:);           %信标信息
                    SSource=SLocation(j,:);        %声源信息
                    if sqrt((SSource(1)-BBeacon(1))^2+(SSource(2)-BBeacon(2))^2)<=R   %感知半径范围之内
                       XITA= Current_Radian(SSource,BBeacon); % 测声源的DOA值子函数
                       XXITA(kk)=XITA+BBeacon(3);             %绝对坐标系下的角度
                       Beacon_use(kk,:)= BBeacon;             %能够测到的信标节点
                       kk=kk+1;
                    end
                end
     %% 信标节点对静态声源进行定位
                 if (kk-1)>=2
                    Spt = TLS_Single(XXITA,Beacon_use(:,1:2));    %声源位置估计子函数   %声源估计位置存储
                    pc=sqrt((SSource(1)-Spt(1))^2+(SSource(2)-Spt(2))^2); %位置偏差
                    if all(Spt==0)~=1 && pc<200  %设定阈值
                       ei=ei+1;
                       pi1=pi1+1;
                       SPbias(pi1)=pc;
                       S_Source(ei,:)=Spt;  %已经定位的声源存储
                       A_Source(ei,:)=SSource;%%准确位置
                    end
                 end
                 XXITA=[];
                 Beacon_use=[];   
                 kk=1;             
            end
            if isempty(SPbias)~=1
                nm=nm+1;
                SPavg(nm)=mean(SPbias);  %一次操作声源平均偏差            
            end

 %% %%%%%%%%%%% 未知节点对声源和信标节点的DOA测量值%%%%%%%%%%%%%%%%%%%%
           S_Bcon=Beacon(:,1:2);
%             S_Bcon=Beacon(:,1:2);
%             B_Source=[S_Source;S_Bcon];         %信标和声源估计位置信息
%             AB_Source=[A_Source;S_Bcon];        %准确位置  
%             ku=0;
%             for iu=1:length(B_Source(:,1))
%                  BSL=AB_Source(iu,:);           %准确的声源和信标位置
%                  E_BSL=B_Source(iu,:);          %估计位置
%                  if sqrt((BSL(1)-Unodes(1))^2+(BSL(2)-Unodes(2))^2)<=R                       
%                        ku=ku+1;
%                        DOA(ku)= Current_Radian(BSL,Unodes);   % 测得带有噪声DOA值，使用准确位置
%                        SBStore(ku,:)=E_BSL;    %声源估计位置存储
%                  end
%             end
            %S_Source=[S_Source;S_Bcon];       %信标和声源位置信息
            %A_Source=[A_Source;S_Bcon];       %准确位置  
            ku=0;
            Ns=0;%声源个数
            if isempty(S_Source)==1
                jj=0;
            else
                jj=length(S_Source(:,1));
            end
            for iu=1:jj
                 BSL=A_Source(iu,:);           %已定位的声源和信标
                 E_BSL=S_Source(iu,:);         %估计位置
                 if sqrt((BSL(1)-Unodes(1))^2+(BSL(2)-Unodes(2))^2)<=R                       
                       ku=ku+1;
                       Ns=Ns+1;
                       DOA(ku)= Current_Radian(BSL,Unodes);   % 测得的带有噪声DOA值
                       SBStore(ku,:)=E_BSL;    %声源估计位置存储
                 end
            end
            Nb=0;
            for ib=1:length(S_Bcon(:,1))
                 BL=S_Bcon(ib,:);           %已定位的声源和信标
                 %E_BSL=S_Source(ib,:);          %估计位置
                 if sqrt((BL(1)-Unodes(1))^2+(BL(2)-Unodes(2))^2)<=R                       
                       ku=ku+1;
                       Nb=Nb+1;
                       DOA(ku)= Current_Radian(BL,Unodes);   % 测得的带有噪声DOA值
                       SBStore(ku,:)=BL;    %声源估计位置存储
                 end
            end
            if ku>=3
  %% 用已知的声源对未知节点进行定位
                [P_Bias, H_Bias] = WLS(SBStore,DOA,Unodes(1:2),Unodes(3),Ns,Nb);%使用Psedo-Linear Least Squares.
                if  P_Bias< threshold
                    num= num + 1;
                    PLS_PBias(num) = P_Bias;  %存储结果，运行次数num
                    PLS_HBias(num) = H_Bias;
                end
            end
            DOA=[];
            SBStore=[];
        end
        display('------the programming is running now-----');
        z=z+1;
        PBIAS(ii,z) = mean(PLS_PBias); %位置误差
        PVAR(ii,z) =std(PLS_PBias);    %位置方差
        HBIAS(ii,z)= mean(PLS_HBias);
        HVAR(ii,z) =std(PLS_HBias);    %角度方差
        SBIAs(ii,z)=mean(SPavg);       %声源平均偏差
        SPavg=[];
        PLS_PBias=[];
        PLS_HBias=[];
    end
    
 end
Sigma=1:err;
%% 数据存储
xlswrite('WLS_PE',PBIAS);%位置误差保存
xlswrite('WLS_HE',HBIAS);%角度误差保存
xlswrite('WLS_Pvar',PVAR);
xlswrite('WLS_Hvar',HVAR);

%% 图形显示1  位置节点平均误差
figure(1)
subplot(2,1,1)
plot(Sigma,PBIAS(1,:),'b*-.', Sigma,PBIAS(2,:),'kd-', Sigma,PBIAS(3,:),'r^-',Sigma,PBIAS(4,:),'gp-','linewidth',1.6)
set(gca,'Fontsize',17)
legend('M=4','M=6','M=8','M=10');
xlabel('DOA误差，单位：°');
ylabel('位置误差，单位：m');
xlim([1 err])
grid on 

subplot(2,1,2)
plot(Sigma, HBIAS(1,:),'b*--', Sigma, HBIAS(2,:),'kd--', Sigma, HBIAS(3,:),'r^--',Sigma, HBIAS(4,:),'gp--','linewidth',1.6)
set(gca,'Fontsize',17)
legend('M=4','M=6','M=8','M=10');
xlabel('DOA误差，单位：°')
ylabel('角度误差，单位：m')
xlim([1 err])
grid on 

%% 图形显示2  节点方差
% figure(2)
% subplot(2,1,1)
% plot(Sigma, PVAR(1,:),'b*--', Sigma, PVAR(2,:),'kd--', Sigma, PVAR(3,:),'r^--', Sigma, PVAR(4,:),'gp--','linewidth',1.6)
% set(gca,'Fontsize',17)
% legend('M=4','M=6','M=8','M=10');
% xlabel('DOA误差的方差，单位：°');
% ylabel('位置误差的方差，单位：m');
% xlim([1 err])
% grid on 
% 
% subplot(2,1,2)
% plot(Sigma, HVAR(1,:),'b*--', Sigma, HVAR(2,:),'kd--', Sigma, HVAR(3,:),'r^--', Sigma, HVAR(2,:),'gp--','linewidth',1.6)
% set(gca,'Fontsize',17)
% legend('M=4','M=6','M=8','M=10');
% xlabel('DOA误差的方差，单位：°')
% ylabel('位置误差的方差，单位：m')
% xlim([1 err])
% grid on 
% 
% %%  声源的平均误差
% figure(3)
% plot(Sigma, SBIAs(1,:),'b*--', Sigma, SBIAs(2,:),'kd--', Sigma, SBIAs(3,:),'r^--' ,Sigma, SBIAs(4,:),'gp--','linewidth',1.6)
% set(gca,'Fontsize',17)
% legend('M=4','M=6','M=8','M=10');
% xlabel('DOA误差，单位：°')
% ylabel('位置误差，单位：m')
% xlim([1 err])
% grid on 
% display('********OK now*********');

