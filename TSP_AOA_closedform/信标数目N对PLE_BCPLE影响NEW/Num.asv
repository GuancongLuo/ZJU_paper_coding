clc;  
clear all
format long
close all
%%%%%信标数目对
%% 设定全局变量
global SIGMA
%% 设定基本的参数，比如蒙特卡洛的个数，DOA误差范围，声源个数等参数
M =2000;                         %Monte Caro times
Unodes=[100,90,pi/3];            %未知节点的位置信息Unodes=[170,120,pi/3]; 
R=300;                            %感知半径
threshold = 150;
%% 在不同声源数目下进行定位
z=0;
SIGMA=2;
 for BN = 10: 40 : 250
        num=0;
        nm=0;
        for i=1:M    
            kk=1;
            ei=0;
            pi1=0;
            SPbias=[];
 %% %%%%%%%%%%% 未知节点对声源和信标节点的DOA测量值%%%%%%%%%%%%%%%%%%%%
            S_Bcon=round(rand(BN,2)*100); 
            ku=0;
            for ib=1:length(S_Bcon(:,1))
                 BL=S_Bcon(ib,:);           %已定位的声源和信标
                 if sqrt((BL(1)-Unodes(1))^2+(BL(2)-Unodes(2))^2)<=R                       
                       ku=ku+1;
                       DOA(ku)= Current_Radian(BL,Unodes);   % 测得的带有噪声DOA值
                       SBStore(ku,:)=BL;    %声源估计位置存储
                 end
            end
            if ku>=3
  %% 用已知的声源对未知节点进行定位
                [U,P_Bias, H_Bias] = PLS(SBStore,DOA,Unodes(1:2),Unodes(3));%使用Psedo-Linear Least Squares.
                [UBC,OV,BP_Bias, BH_Bias] = BCPLS(SBStore,DOA,Unodes(1:2),Unodes(3));%使用Bias Compensated PseudoLinear Least Squares.
                [IVP_Bias, IVH_Bias] = WIV(SBStore,DOA,Unodes(1:2),Unodes(3),UBC);
                [PLE_WIVP, PLE_WIVH] = WIV(SBStore,DOA,Unodes(1:2),Unodes(3),U);
                %[MP, MH]=BMLF(SBStore,DOA,Unodes(1:2),Unodes(3),OV);
                if  P_Bias< threshold && MP< threshold
                    num= num + 1;
                    PLS_PBias(num) = P_Bias;  %存储结果，运行次数num
                    PLS_HBias(num) = H_Bias;
                    BCPL_PBias(num)=BP_Bias;
                    BCPL_HBias(num)=BH_Bias;
                    WIV_PBias(num)=IVP_Bias;
                    WIV_HBias(num)=IVH_Bias;
                    PLE_WP(num)=PLE_WIVP;
                    PLE_WH(num)=PLE_WIVH;
%                     ML_PBias(num)=MP;
%                     ML_HBias(num)=MH;
                end
            end
            DOA=[];
            SBStore=[];
        end
        display('------the programming is running now-----');
        z=z+1;
        PBIAS(z)= mean(PLS_PBias); %位置误差
        HBIAS(z)= mean(PLS_HBias);
        BC_PBIAS(z)= mean(BCPL_PBias);
        BC_HBIAS(z)= mean(BCPL_HBias);
        WIV_PBIAS(z)= mean(WIV_PBias);
        WIV_HBIAS(z)= mean(WIV_HBias);
        PLEWIV_PBIAS(z)= mean(PLE_WP);
        PLEWIV_HBIAS(z)= mean(PLE_WH);
%         ML_PBIAS(z)= mean(ML_PBias);
%         ML_HBIAS(z)= mean(ML_HBias);
        PLS_PBias=[];
        PLS_HBias=[];
        BCPL_PBias=[];
        BCPL_HBias=[];
        WIV_Pbias=[];
        WIV_Hbias=[];
        ML_HBias=[];
        ML_PBias=[];
        PLE_WP=[];
        PLE_WH=[];
 end

BN =  10: 40 : 250;
%% 数据存储
xlswrite('PLE_PE',PBIAS);  %PLE位置误差保存
xlswrite('PLE_HE',HBIAS);  %PLE角度误差保存
xlswrite('BCPLE_PE',BC_PBIAS); %BCPLE位置误差保存
xlswrite('BCPLE_HE',BC_HBIAS); %BCPLE角度误差保存
xlswrite('WIV_PE',WIV_PBIAS); %BCPLE位置误差保存
xlswrite('WIV_HE',WIV_HBIAS); %BCPLE角度误差保存
xlswrite('PLEWIV_PE',PLEWIV_PBIAS); %BCPLE位置误差保存
xlswrite('PLEWIV_HE',PLEWIV_HBIAS); %BCPLE角度误差保存
% xlswrite('ML_PE',ML_PBIAS); %BCPLE位置误差保存
% xlswrite('ML_HE',ML_HBIAS); %BCPLE角度误差保存


%% 图形显示2  节点方差
figure(1)
subplot(2,1,1)
%plot(BN, PBIAS,'m>--',BN, BC_PBIAS,'b*--',BN, WIV_PBIAS,'go--',BN, PLEWIV_PBIAS,'kd--',BN, ML_PBIAS,'rs--','linewidth',1.5)
plot(BN, PBIAS,'m>--',BN, BC_PBIAS,'b*--',BN, WIV_PBIAS,'go--',BN, PLEWIV_PBIAS,'kd--','linewidth',1.5)
set(gca,'Fontsize',14);
%legend('PLE','BCPLE','BCPLE_WIV','PLE_WIV','ML');
legend('PLE','BCPLE','BCPLE_WIV','PLE_WIV');
xlabel('The Number of Beacons');
ylabel('Location Error (m)');
grid on 

subplot(2,1,2)
% plot(BN, HBIAS,'m>--',BN, BC_HBIAS,'b*--',BN, WIV_HBIAS,'go--',BN, PLEWIV_HBIAS,'kd--',BN, ML_HBIAS,'rs--','linewidth',1.5)
plot(BN, HBIAS,'m>--',BN, BC_HBIAS,'b*--',BN, WIV_HBIAS,'go--',BN, PLEWIV_HBIAS,'kd--','linewidth',1.5)
set(gca,'Fontsize',14);
legend('PLE','BCPLE','BCPLE_WIV','PLE_WIV');
xlabel('The Number of Beacons');
ylabel('Orienation Error (degrees)');
grid on 
